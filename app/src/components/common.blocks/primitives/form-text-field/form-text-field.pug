include ~@common.blocks/primitives/heading/heading.pug
include ~@common.blocks/primitives/icon/icon.pug

//-
  heading?: see mixin heading
  description?: see mixin heading
  headingMarginBottom?: see marginBottom in mixin heading
  name?: string - name of input field
  type?: 'text' | 'email' | 'password' | 'date' - type of field for validation 
  placeholder?: string - placeholder text
  value?: string - init value of field
  autofocus?: boolean - autofocus of field
  materialIcon?: string - material icon name for submit btn in field
  isFilter?: boolean - if true, input change event will reload page with chosen value(get method)
  Tip: mixin also uses 'and attributes'(&attributes)
mixin form-text-field({ heading = '', description = '', headingMarginBottom = '', name = 'text-field', type = 'text', placeholder = '', value = '', autofocus = false, materialIcon = '', isFilter = false } = {})
  -
    //- allowed inputMask types: 'text' | 'search' | 'tel' | 'url' | 'password', see: https://github.com/RobinHerbots/Inputmask#allowed-html-elements
    //- allowed inputmode:  'none' | 'text' | 'decimal' | 'numeric' | 'tel' | 'search' | 'email' | 'url',

    const attributesOfType = {
      text:{
        inputType: 'text',
        inputmode: 'text',
        placeholder: '',
      },
      email:{
        inputType: 'text',
        inputmode: 'email',
        placeholder: 'Email',
      },
      password:{
        inputType: 'password',
        inputmode: 'text',
        placeholder: 'Пароль',
      },
      date:{
        inputType: 'text',
        inputmode: 'numeric',
        placeholder: 'ДД.ММ.ГГГГ',
      }
    }

    const typeClasses = type ? [`form-text-field__input_type_with-${type}`,`js-form-text-field__input_type_with-${type}`] : undefined;
  .form-text-field.js-form-text-field&attributes(attributes)
    if heading
      +heading(heading, { description, marginBottom: headingMarginBottom, isLabel: true })(
        for=name
      )
    .form-field
      input.form-text-field__input.js-form-text-field__input(
        class=[...typeClasses],
        data-is-filter=isFilter,
        type=attributesOfType[type].inputType,
        inputmode=attributesOfType[type].inputmode,
        name=name,
        id=name,
        placeholder=attributesOfType[type].placeholder || placeholder,
        value=value,
        autofocus=autofocus
      )
      if materialIcon
        +icon({ tag: 'button', content: materialIcon, width: 'large', color: 'primary-gradient' })(
          type="submit"
        )
